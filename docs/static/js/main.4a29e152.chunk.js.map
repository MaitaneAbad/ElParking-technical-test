{"version":3,"sources":["components/services/callToApi.js","components/Start.js","components/Header.js","components/Game.js","components/App.js","index.js"],"names":["callToApi","fetch","then","response","json","results","map","data","questions","question","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","catch","error","console","alert","Start","props","log","className","to","type","value","onClick","i","length","subArrayAux","j","push","sort","Math","random","optionAnswerTotal","loadNextQuestionAndAnswers","Header","Game","handleOptionInputs","ev","setError","setAnswers","target","setCheckedValid","checked","validAswers","useState","answers","resumen","setResumen","sectionHidden","setSectionHidden","quiz","setQuiz","viewQuestions","setViewQuestions","checkedValid","questionAnswerPack","counter","handleNextQuestion","arrayAux","id","resumenQuestion","item","htmlFor","name","answer","onChange","setCounter","App","setData","setOptionAnswerTotal","setQuestion","setAnswer","titleQuestion","firstAnswers","useEffect","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a29e152.chunk.js","sourcesContent":["const callToApi = () => {\r\n  return fetch(\r\n    'https://opentdb.com/api.php?amount=10&category=19&type=multiple'\r\n  )\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      const data = response.results.map((data) => {\r\n        return {\r\n          questions: data.question,\r\n          correctAnswer: data.correct_answer,\r\n          incorrectAnswers: data.incorrect_answers,\r\n        };\r\n      });\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n      alert(\r\n        'Hubo un error en la página, vuelve a cargar la página y si no espera unos minutos.'\r\n      );\r\n    });\r\n};\r\nexport default callToApi;\r\n","import '../styles/layout/start.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Start = (props) => {\r\n  console.log(props);\r\n  const createAnswers = () => {\r\n    for (let i = 0; i < props.data.length; i++) {\r\n      const subArrayAux = [];\r\n      for (let j = 0; j < props.data[i].incorrectAnswers.length; j++) {\r\n        subArrayAux.push(props.data[i].incorrectAnswers[j]);\r\n      }\r\n      subArrayAux.push(props.data[i].correctAnswer);\r\n      subArrayAux.sort(function () {\r\n        return Math.random() - 0.5;\r\n      });\r\n      props.optionAnswerTotal.push(subArrayAux);\r\n    }\r\n    props.loadNextQuestionAndAnswers();\r\n  };\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <h1 className='landing--title'>Tri-vi-al</h1>\r\n      <form className='landing--form'>\r\n        <NavLink to='game'>\r\n          <input\r\n            className='landing--form__button'\r\n            type='button'\r\n            value='Comenzar juego'\r\n            onClick={createAnswers}\r\n          />\r\n        </NavLink>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default Start;\r\n","const Header = () => {\r\n  return <h1 className='landing--title'>Tri-vi-al</h1>;\r\n};\r\nexport default Header;\r\n","//import Answers from './Answers';\r\nimport '../styles/layout/game.scss';\r\nimport React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Game = (props) => {\r\n  console.log(props);\r\n  const handleOptionInputs = (ev) => {\r\n    setError('');\r\n    setAnswers(ev.target.value);\r\n    setCheckedValid(ev.target.checked);\r\n    validAswers(ev.target.value);\r\n  };\r\n  const [answers, setAnswers] = useState('');\r\n  const [resumen, setResumen] = useState('hidden');\r\n  const [sectionHidden, setSectionHidden] = useState('hidden');\r\n  const [quiz, setQuiz] = useState('');\r\n  const [viewQuestions, setViewQuestions] = useState('');\r\n  const [checkedValid, setCheckedValid] = useState(false);\r\n  const [questionAnswerPack, setQuestionAnswerPack] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const validAswers = () => {\r\n    if (answers === props.data[props.counter - 1].correctAnswer) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleNextQuestion = (ev) => {\r\n    const arrayAux = [];\r\n    if (checkedValid !== true) {\r\n      setSectionHidden('');\r\n      setError('Tienes que seleccionar alguna respuesta');\r\n    } else {\r\n      setSectionHidden('hidden');\r\n      arrayAux.push(props.question);\r\n      arrayAux.push(answers);\r\n      arrayAux.push(validAswers(ev.target.value));\r\n      questionAnswerPack.push(arrayAux);\r\n      handleOptionInputs(ev);\r\n      props.loadNextQuestionAndAnswers();\r\n    }\r\n\r\n    if (ev.target.id === '10') {\r\n      console.log(ev);\r\n      if (checkedValid !== true) {\r\n        setSectionHidden('');\r\n        setError('Tienes que seleccionar alguna respuesta');\r\n      } else {\r\n        setResumen('');\r\n        setViewQuestions('hidden');\r\n        setQuiz('hidden');\r\n      }\r\n    }\r\n  };\r\n\r\n  const resumenQuestion = questionAnswerPack.map((item, i) => {\r\n    console.log(props);\r\n\r\n    return (\r\n      <li className='main__sectionQuestions--viewQuestion__list--item' key={i}>\r\n        <p className='main__sectionQuestions--viewQuestion__list--item__question'>\r\n          {item[0]}\r\n        </p>\r\n        <div className='main__sectionQuestions--viewQuestion__list--item__answer'>\r\n          <div className='main__sectionQuestions--viewQuestion__list--item__answer--iconSection'>\r\n            {item[2] === true ? (\r\n              <i className=' main__sectionQuestions--viewQuestion__list--item__answer--iconSection__correct fas fa-check-circle'></i>\r\n            ) : (\r\n              <i className='main__sectionQuestions--viewQuestion__list--item__answer--iconSection__error fas fa-times-circle'></i>\r\n            )}\r\n            <p className='main__sectionQuestions--viewQuestion__list--item__answer--iconSection__answerClick'>\r\n              {item[1]}\r\n            </p>\r\n          </div>\r\n          {item[2] === false ? (\r\n            <p className='main__sectionQuestions--viewQuestion__list--item__answer--correctAnswer'>\r\n              Correct:\r\n              <span className='main__sectionQuestions--viewQuestion__list--item__answer--correctAnswer__span'>\r\n                {props.data[i].correctAnswer}{' '}\r\n              </span>\r\n            </p>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  // const p = () => {\r\n  //   questionAnswerPack.map((item) => {\r\n  //     if (item[2] === true) {\r\n  //       setCounterTrue(+1);\r\n  //       console.log(counterTrue);\r\n  //     } else if (item[2] === false) {\r\n  //       setCounterFalse(+1);\r\n  //       console.log(counterFalse);\r\n  //     }\r\n  //   });\r\n  // };\r\n  const handleReset = () => {\r\n    props.setCounter(0);\r\n  };\r\n  function button() {\r\n    const changeButton = props.counter;\r\n    if (changeButton < props.data.length) {\r\n      return (\r\n        <div className='main__sectionQuestions--list__containerButton'>\r\n          <button\r\n            className='main__sectionQuestions--list__containerButton--button'\r\n            onClick={handleNextQuestion}\r\n          >\r\n            Siguiente\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className='main__sectionQuestions--list__containerButton'>\r\n          <button\r\n            className='main__sectionQuestions--list__containerButton--button'\r\n            id={props.data.length}\r\n            onClick={handleNextQuestion}\r\n          >\r\n            Finalizar\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className='main'>\r\n      <Header />\r\n      <section className='main__sectionQuestions'>\r\n        <ul className={quiz}>\r\n          <li\r\n            className='main__sectionQuestions--list'\r\n            key={props.counter}\r\n            id={props.counter}\r\n          >\r\n            <p className='main__sectionQuestions--list__question'>\r\n              {props.question}\r\n            </p>\r\n            <form className='main__sectionQuestions--list__form'>\r\n              {' '}\r\n              <label\r\n                className='main__sectionQuestions--list__form--labels'\r\n                htmlFor='firstOption'\r\n              >\r\n                <input\r\n                  className='main__sectionQuestions--list__form--labels__inputs'\r\n                  type='radio'\r\n                  name='firstOption'\r\n                  id={props.answer[0]}\r\n                  value={props.answer[0]}\r\n                  checked={answers === props.answer[0]}\r\n                  onChange={handleOptionInputs}\r\n                />\r\n                <p className='main__sectionQuestions--list__form--labels__option'>\r\n                  {props.answer[0]}\r\n                </p>\r\n              </label>\r\n              <label\r\n                className='main__sectionQuestions--list__form--labels'\r\n                htmlFor='secondOption'\r\n              >\r\n                <input\r\n                  className='main__sectionQuestions--list__form--labels__inputs'\r\n                  type='radio'\r\n                  name='secondOption'\r\n                  id={props.answer[1]}\r\n                  value={props.answer[1]}\r\n                  checked={answers === props.answer[1]}\r\n                  onChange={handleOptionInputs}\r\n                />\r\n                <p className='main__sectionQuestions--list__form--labels__option'>\r\n                  {props.answer[1]}\r\n                </p>\r\n              </label>{' '}\r\n              <label\r\n                className='main__sectionQuestions--list__form--labels'\r\n                htmlFor='thirdthOption'\r\n              >\r\n                <input\r\n                  className='main__sectionQuestions--list__form--labels__inputs'\r\n                  type='radio'\r\n                  name='thirdthOption'\r\n                  id={props.answer[2]}\r\n                  value={props.answer[2]}\r\n                  checked={answers === props.answer[2]}\r\n                  onChange={handleOptionInputs}\r\n                />{' '}\r\n                <p className='main__sectionQuestions--list__form--labels__option'>\r\n                  {props.answer[2]}\r\n                </p>\r\n              </label>\r\n              <label\r\n                className='main__sectionQuestions--list__form--labels'\r\n                htmlFor='fourthOption'\r\n              >\r\n                <input\r\n                  className='main__sectionQuestions--list__form--labels__inputs'\r\n                  type='radio'\r\n                  name='fourthOption'\r\n                  id={props.answer[3]}\r\n                  value={props.answer[3]}\r\n                  checked={answers === props.answer[3]}\r\n                  onChange={handleOptionInputs}\r\n                />{' '}\r\n                <p className='main__sectionQuestions--list__form--labels__option'>\r\n                  {props.answer[3]}\r\n                </p>\r\n              </label>\r\n            </form>\r\n            {button()}\r\n          </li>\r\n        </ul>\r\n        <article className={`main__error ${sectionHidden}`}>\r\n          <p className='main__error--title'>{error}</p>\r\n        </article>\r\n        <article className='main__sectionQuestions--viewQuestion'>\r\n          <ul\r\n            className={`main__sectionQuestions--viewQuestion__list ${viewQuestions}`}\r\n          >\r\n            {resumenQuestion}\r\n          </ul>\r\n        </article>\r\n      </section>\r\n      <section className='main__sectionAnswers'>\r\n        <div className={resumen}>\r\n          <h2>Resumen del Tri-vi-al</h2>\r\n          <ul>{resumenQuestion}</ul>\r\n          <NavLink to='/'>\r\n            <button onClick={handleReset}>Reset</button>\r\n          </NavLink>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\nexport default Game;\r\n","import '../styles/App.scss';\nimport { Route, Routes } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport callToApi from './services/callToApi';\n//import ls from './services/localStorage';\nimport Start from './Start';\nimport Game from './Game';\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [counter, setCounter] = useState(0);\n  const [optionAnswerTotal, setOptionAnswerTotal] = useState([]);\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  // const [localStorage, setLocalStorage] = useState(ls.get('localStorage'));\n\n  // ls.set('localStorage', localStorage);\n  const loadNextQuestionAndAnswers = () => {\n    if (counter < data.length) {\n      const titleQuestion = data[counter].questions;\n      const firstAnswers = optionAnswerTotal[counter];\n      for (let i = 0; i < firstAnswers.length; i++) {}\n      setQuestion(titleQuestion);\n      setAnswer(firstAnswers);\n      setCounter(counter + 1);\n    }\n  };\n  useEffect(() => {\n    callToApi().then((response) => {\n      setData(response);\n    });\n  }, []);\n\n  return (\n    <div className='body'>\n      <Routes>\n        <Route\n          path='/'\n          element={\n            <Start\n              data={data}\n              optionAnswerTotal={optionAnswerTotal}\n              setOptionAnswerTotal={setOptionAnswerTotal}\n              loadNextQuestionAndAnswers={loadNextQuestionAndAnswers}\n            />\n          }\n        />\n        <Route\n          path='/game'\n          element={\n            <Game\n              data={data}\n              optionAnswerTotal={optionAnswerTotal}\n              loadNextQuestionAndAnswers={loadNextQuestionAndAnswers}\n              question={question}\n              setQuestion={setQuestion}\n              answer={answer}\n              setAnswer={setAnswer}\n              counter={counter}\n              setCounter={setCounter}\n            />\n          }\n        />\n        <Route path='*' element={<>Página no encontrada</>} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}